import { userColors } from '@/lib/constants'
import { Highlight as TiptapHighlight } from '@tiptap/extension-highlight'
import markdownitMark from 'markdown-it-mark'

export const Highlight = TiptapHighlight.extend({
  addStorage() {
    return {
      markdown: {
        serialize: {
          open: '==',
          close: '==',
        },
        parse: {
          setup(markdownit) {
            markdownit.use(markdownitMark)
          },
          updateDOM() {
            // here you can update HTML generated by markdown-it
          },
        },
      },
    }
  },
  addAttributes() {
    if (!this.options.multicolor) {
      return {}
    }

    return {
      color: {
        default: userColors[0],
        parseHTML: element => element.getAttribute('data-color'),
        renderHTML: attributes => {
          return {
            'data-color': attributes.color,
            style: `background-color: ${attributes.color}; color: inherit`,
          }
        },
      },
    }
  },
})

export default Highlight
